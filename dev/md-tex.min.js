function downloadTextAsFile(e,t){var n=document.createElement("a");n.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(t)),n.setAttribute("download",e),n.style.display="none",document.body.appendChild(n),n.click(),document.body.removeChild(n)}function createDependencyProposals(e){return[{label:"Center",kind:monaco.languages.CompletionItemKind.Function,insertText:"<center>${1:Hello}</center>",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Bold",kind:monaco.languages.CompletionItemKind.Function,insertText:"**${1:text}**",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Italics",kind:monaco.languages.CompletionItemKind.Function,insertText:"*${1:text}*",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Underline",kind:monaco.languages.CompletionItemKind.Function,insertText:"__${1:text}__",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Strikethrough",kind:monaco.languages.CompletionItemKind.Function,insertText:"~~${1:text}~~",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Table",kind:monaco.languages.CompletionItemKind.Function,insertText:"|${1:text}|${2:text}|\n|--|--|\n|${3:text}|${4:text}|",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Vector 2x1",kind:monaco.languages.CompletionItemKind.Function,insertText:"\\\\\\\\begin{matrix} ${1:1} \\\\\\\\\\\\\\\\ ${2:2} \\\\\\\\end{matrix}",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Vector 3x1",kind:monaco.languages.CompletionItemKind.Function,insertText:"\\\\\\\\begin{matrix} ${1:1} \\\\\\\\\\\\\\\\ ${2:2} \\\\\\\\\\\\\\\\ ${3:3} \\\\\\\\end{matrix}",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Vector [2x1]",kind:monaco.languages.CompletionItemKind.Function,insertText:"\\\\\\\\begin{bmatrix} ${1:1} \\\\\\\\\\\\\\\\ ${2:2} \\\\\\\\end{bmatrix}",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Vector [3x1]",kind:monaco.languages.CompletionItemKind.Function,insertText:"\\\\\\\\begin{bmatrix} ${1:1} \\\\\\\\\\\\\\\\ ${2:2} \\\\\\\\\\\\\\\\ ${3:3} \\\\\\\\end{bmatrix}",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Matrix 2x2",kind:monaco.languages.CompletionItemKind.Function,insertText:"\\\\\\\\begin{matrix} ${1:1} & ${2:2} \\\\\\\\\\\\\\\\ ${3:3} & ${4:4} \\\\\\\\end{matrix}",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Matrix 3x3",kind:monaco.languages.CompletionItemKind.Function,insertText:"\\\\\\\\begin{matrix} ${1:1} & ${2:2} & ${3:3} \\\\\\\\\\\\\\\\ ${4:4} & ${5:5} & ${6:6} \\\\\\\\\\\\\\\\ ${7:7} & ${8:8} & ${9:9} \\\\\\\\end{matrix}",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Matrix [2x2]",kind:monaco.languages.CompletionItemKind.Function,insertText:"\\\\\\\\begin{bmatrix} ${1:1} & ${2:2} \\\\\\\\\\\\\\\\ ${3:3} & ${4:4} \\\\\\\\end{bmatrix}",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Matrix [3x3]",kind:monaco.languages.CompletionItemKind.Function,insertText:"\\\\\\\\begin{bmatrix} ${1:1} & ${2:2} & ${3:3} \\\\\\\\\\\\\\\\ ${4:4} & ${5:5} & ${6:6} \\\\\\\\\\\\\\\\ ${7:7} & ${8:8} & ${9:9} \\\\\\\\end{bmatrix}",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"URL",kind:monaco.languages.CompletionItemKind.Function,insertText:'[${1:SKGadi}](${2:https://skgadi.com} "${3:Title}")',insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Imagae",kind:monaco.languages.CompletionItemKind.Function,insertText:'![${1:alt-text}](${2:https://skgadi.com/images/my-logo.png} =${3:*}x${4:100} "${5:Title}")',insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Video",kind:monaco.languages.CompletionItemKind.Function,insertText:'[![${1:Youtube-video}](https://img.youtube.com/vi/${2:_S3YDKsFmpk}/0.jpg =${3:*}x${4:200} "${5:TItle}")](https://www.youtube.com/watch?v=${2:_S3YDKsFmpk})',insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Vertical dots",kind:monaco.languages.CompletionItemKind.Function,insertText:Array(20).fill(".").join("\n\n"),insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"TexInline",kind:monaco.languages.CompletionItemKind.Function,insertText:"$${1:x^2}$",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"TexDisplay",kind:monaco.languages.CompletionItemKind.Function,insertText:"$$${1:x^2}$$",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"TexEnvironment",kind:monaco.languages.CompletionItemKind.Function,insertText:"```latex\n${1:x^2}\n```",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"InlineTex",kind:monaco.languages.CompletionItemKind.Function,insertText:"$${1:x^2}$",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Power",kind:monaco.languages.CompletionItemKind.Function,insertText:"${1:x}^${2:2}",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Fraction",kind:monaco.languages.CompletionItemKind.Function,insertText:"\\frac{${1:1}}{${2:2}}",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Limit",kind:monaco.languages.CompletionItemKind.Function,insertText:"\\lim_{${2:x}\\rightarrow ${3:0}}x",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Derivative",kind:monaco.languages.CompletionItemKind.Function,insertText:"\\frac{{\\mathrm d}}{{\\mathrm d}${2:t}}${1:x}",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Integral",kind:monaco.languages.CompletionItemKind.Function,insertText:"\\int ${1:x} {\\mathrm d}${2:t}",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Definite integral",kind:monaco.languages.CompletionItemKind.Function,insertText:"\\int_{${3:0}}^{${4:\\infty}} ${1:x} {\\mathrm d}${2:t}",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Braces",kind:monaco.languages.CompletionItemKind.Function,insertText:"\\left${2:(} ${1:x} \\right${3:)}",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Braces (·)",kind:monaco.languages.CompletionItemKind.Function,insertText:"\\left( ${1:x} \\right)",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Braces [·]",kind:monaco.languages.CompletionItemKind.Function,insertText:"\\left[ ${1:x} \\right]",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Braces {·}",kind:monaco.languages.CompletionItemKind.Function,insertText:"\\left\\\\\\\\{ ${1:x} \\right\\\\\\\\}",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Times",kind:monaco.languages.CompletionItemKind.Function,insertText:"\\times",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Pi",kind:monaco.languages.CompletionItemKind.Function,insertText:"\\pi",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e},{label:"Degree",kind:monaco.languages.CompletionItemKind.Function,insertText:"\\degree",insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,range:e}]}function updateOutbox(){isUpdating||(isUpdating=!0,setTimeout(()=>{document.getElementById("out-box").innerHTML=markdown.makeHtml(editor.getValue()+Array(20).fill("&nbsp;").join("\n\n")),isUpdating=!1},50))}const toc=[];class markdownTreatment{constructor(){showdown.setFlavor("github");const e={extensions:[showdownToc({toc:toc}),showdownKatex({delimiters:[{left:"$$",right:"$$",display:!0},{left:"\\[",right:"\\]",display:!0},{left:"$",right:"$",display:!1},{left:"\\(",right:"\\)",display:!1}],throwOnError:!1})],sanitize:!1,tables:!0,tasklists:!0,smoothLivePreview:!0,simpleLineBreaks:!0,openLinksInNewWindow:!0,underline:!0,omitExtraWLInCodeBlocks:!0,customizedHeaderId:!0,prefixHeaderId:"doc-",parseImgDimensions:!0,simplifiedAutoLink:!0,strikethrough:!0,tablesHeaderId:!0};this.converter=new showdown.Converter(e)}makeHtml(e){return this.converter.makeHtml(e)}prepareFullHtml(e,t){let n="<!doctype html>";return n+="<html lang=en>",n+="<head>",n+='<meta name="viewport" content="width=device-width, initial-scale=1.0">',n+="<title>"+e+"</title>",n+='<link rel="icon" type="image/png" href="favicon.png">',n+='<link rel="stylesheet" href="'+window.location.origin+'css/md-tex.min.css">',n+='<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css" rel="stylesheet">',n+='<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/4.0.0/github-markdown.min.css" integrity="sha512-Oy18vBnbSJkXTndr2n6lDMO5NN31UljR8e/ICzVPrGpSud4Gkckb8yUpqhKuUNoE+o9gAb4O/rAxxw1ojyUVzg==" crossorigin="anonymous" />',n+='<link rel="stylesheet" href="https://unpkg.com/katex@0.11.0/dist/katex.min.css" />',n+="</head>",n+="<body>",n+='<div class="markdown-body">',n+=this.makeHtml(t).replaceAll("\n",""),n+="</div>",n+="<script>setTimeout(()=>{window.print();},100);</script>",n+="</body>",n+="</html>",n}}const markdown=new markdownTreatment;$(document).ready(function(){const e="metro";$("#mainSplitter").jqxSplitter({width:"calc(100% - 2px)",height:"calc(100% - 2px)",panels:[{size:"33%"}],theme:e})}),monaco.languages.registerCompletionItemProvider("markdown",{provideCompletionItems:function(e,t){var n=e.getWordUntilPosition(t),o={startLineNumber:t.lineNumber,endLineNumber:t.lineNumber,startColumn:n.startColumn,endColumn:n.endColumn};return{suggestions:createDependencyProposals(o)}}});const templateText=["# Type your notes here","You can write inline math $x^2$","And display math as $$x^2$$"].join("\n"),editor=monaco.editor.create(document.getElementById("container"),{value:templateText,language:"markdown",automaticLayout:!0,wordWrap:"on",theme:"vs"});editor.focus(),editor.onDidChangeModelContent(function(e){updateOutbox()});let isUpdating=!1;updateOutbox();const toolbox=[{html:"<i class='far fa-file'></i>",title:"New",func:function(){confirm("This operation will remove the present text.\nAre you sure you want to proceed?\n\nPress Ok proceed.")&&(editor.setValue(""),editor.focus())}},{html:"<i class='far fa-file-alt'></i>",title:"Template",func:function(){confirm("This operation will remove the present text.\nAre you sure you want to proceed?\n\nPress Ok proceed.")&&(editor.setValue(templateText),editor.focus())}},{html:"<i class='far fa-folder-open'></i>",title:"Open",func:function(e){confirm("This operation will remove the present text.\nAre you sure you want to proceed?\n\nPress Ok proceed.")&&(document.getElementById("md-file").value="",document.getElementById("md-file").click())}},{html:"<i class='far fa-save'></i>",title:"Save text",func:function(){downloadTextAsFile((new Date).toISOString()+"-notes.md",editor.getValue())}},{html:"<i class='fas fa-save'></i>",title:"Save HTML",func:function(e){downloadTextAsFile((new Date).toISOString()+"-notes.html",markdown.prepareFullHtml("Notes prepared at https://oct.skgadi.com/md-tex.min.html",editor.getValue()))}},{html:"<i class='fas fa-print'></i>",title:"Print",func:function(){const e=markdown.prepareFullHtml("Notes prepared at https://oct.skgadi.com/md-tex.min.html",editor.getValue()),t=open(void 0,"blank");t.document.write(e),t.document.close()}}];toolbox.forEach(e=>{e.toolset;const t=document.createElement("div");t.innerHTML=e.html,t.title=e.title,t.onclick=function(t){e.func()};try{document.getElementById("tool-bar").append(t)}catch(e){console.log(e)}}),document.getElementById("md-file").addEventListener("change",e=>{fileReader.readAsText(e.target.files[0])});const fileReader=new FileReader;fileReader.onload=(()=>{fileContent=fileReader.result,editor.setValue(fileContent)}),window.onbeforeunload=function(){return"Sure?"};